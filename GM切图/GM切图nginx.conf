user root;
worker_processes 4;
error_log /media/disk1/nginx/logs/error.log info;
pid        /var/run/nginx/nginx.pid;
worker_rlimit_nofile 65535;
events
{
 use epoll;
 worker_connections 65535;
}
http
{
 include mime.types;
 default_type  application/octet-stream;
 server_names_hash_bucket_size 128;
 client_header_buffer_size 32k;
 large_client_header_buffers 4 32k;
 client_max_body_size 8m;
 sendfile on;
 tcp_nopush on;
 keepalive_timeout 60;

 tcp_nodelay on;

 client_body_buffer_size 512k;
 proxy_connect_timeout 5;
 proxy_read_timeout 60;
 proxy_send_timeout 5;
 proxy_buffer_size 16k;
 proxy_buffers 4 64k;
 proxy_busy_buffers_size 128k;
 proxy_temp_file_write_size 128k;
 proxy_temp_path /media/disk1/nginx/proxy_temp;
 proxy_cache_path /media/disk1/nginx/proxy_cache levels=1:2 keys_zone=content:20m inactive=1d max_size=100m;
 proxy_cache_bypass $http_secret_header;


 gzip on;
 gzip_min_length 1k;
 gzip_buffers 4 16k;
 gzip_http_version 1.0;
 gzip_comp_level 2;
 gzip_types text/plain application/x-javascript text/css application/xml;
 gzip_vary on;

upstream ecapps {
 server 172.20.6.48:80;
 ip_hash;
 }

upstream fdfs_g1 {
    server 172.20.7.25:80 weight=1 max_fails=2 fail_timeout=30s;
}

 log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"' 
		      '"$upstream_cache_status"';

 server
 {
 listen 80;
 server_name localhost;
 index index.html index.htm index.php;


 access_log /media/disk1/nginx/logs/access.log  main;

 location /pics/ {
    gridfs ec
	   root_collection=fs
	   field=filename
	   type=string;
    mongo 172.20.6.48:27017;
}

location /g1/M00 {

	alias /data/testimage;
	set $image_root "/data/testimage";
           if ($uri ~ "/([a-zA-Z0-9]+)/([a-zA-Z0-9]+)/(.*)") {
                set $image_dir "$image_root/";
                set $image_name "$3";
                set $file "$image_dir$image_name";
	        set $dir "$image_dir";
			#echo $file;
            }
	   
  	    if (!-f $file) {
                #lua_code_cache off;
		
                content_by_lua_file "/etc/nginx/gmworker.lua";
            }	

	
}

        location /lua {
	    default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
                ';
        }


location ~ /purge(/.*) {
        #allow 172.20.7.24;
        #deny all;
        allow all;
        proxy_cache_purge content $1$is_args$args;
    }

location ~ /static/(.*)\.(html|htm|js|css|png|gif|jpg|jpeg)$
{
 proxy_cache content; 
 proxy_cache_valid  200 304 301 302 10d; 
 proxy_cache_valid  any 1d; 
 proxy_cache_key $request_uri$is_args$args; 
 proxy_pass http://ecapps;
 proxy_redirect off;
 proxy_set_header Host  $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 add_header X-Cache-Status $upstream_cache_status;
}


location ~ \.shtml$
{
 proxy_cache content;
 proxy_cache_valid  200 304 301 302 10d;
 proxy_cache_valid  any 1d;
 proxy_cache_key $request_uri$is_args$args;
 proxy_pass http://ecapps;
 proxy_redirect off;
 proxy_set_header Host  $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 add_header X-Cache-Status $upstream_cache_status;
}

location /
{

	proxy_pass http://ecapps;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
 }


location /NginxStatus  
 {  
 stub_status on;  
 auth_basic "NginxStatus";  
 }  


 }
}
